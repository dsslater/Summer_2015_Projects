<?php
/*
  All documentation for the functions used here can be found in g-functions.php

  This script uses the csvs uploaded and creates a set of rate tables. One master 
  table and one for each vendor that is also a customer. The rates are calculated 
  using a blend of costs that is user determined, a blacklist of bad NPANXXs for 
  certain vendors, a drop Delta, and finally pricing rules.
*/

require_once('const.php'); //db credentials
require_once('util.php'); //PDO handling functions
require_once('g-functions.php');
//ini_set('display_errors', 'On');
ini_set('max_execution_time', 300);
//error_reporting(E_ALL | E_STRICT);

$conn = connect(SERVER, DBNAME, USERNAME, PASSWORD); //Throws 'ERROR (1)' if it can't connect

$dropDelta = -1; //stock drop delta if none is provided
if($_POST['dropDelta']) {
    $dropDelta = num_filter($_POST['dropDelta']);
	if ($dropDelta < 0) {
		die("ERROR: (13) ");
	}
}

$RSID = $_POST['code_name']; //mandatory in JS so it can be assumed 
$e_date = $_POST['effective_date'];//that these fields will be there

$blend_arr = array(0.7,0.2,0.1); //stock blend array if none is provided
if($blend = $_POST['costRule']) {
    $blend = num_filter($blend);
	if($blend == "") die("ERROR: (14) ");
	$blend_arr = explode(",", $blend);
}

$numCols = count($blend_arr);//number of columns needed to blend
$numVendors = $numCols + 2; //number of vendors grabbed so that if drops occur enough are accounted for

$vendorString = $_POST['uploads'];
if($vendorString == "") die("ERROR: (15) ");
$vendorArr = explode(",", substr($vendorString, 1)); //now contains all of the vendor table names
$numtables = count($vendorArr); //number of tables available

$numcustomers = 0;
if($_POST['customers'] && $_POST['customers'] != "") {
    $customerString = $_POST['customers'];
    $customerArr = explode(",", substr($customerString, 1)); //now contains all of the customer names
    $numcustomers = count($customerArr); //number of customer cycles that need to be done
}

$root = "DIRECTORY ROOT"; //makes a folder for this rate set which will then be zipped
$session_name = md5(time() + mt_rand());
$base = $root . $session_name;

$masterTable = "m_" . $session_name; //puts all vendor tables together
$internal = $masterTable . "_i"; //concats all vendors by code
$calc_table = $masterTable . "_calc"; //dynamically created to the number of columns
$cost_table = $masterTable . "_cost"; //generated by queries from calc_table
$final_table = $masterTable . "_f"; //has applied mark up and is properly formatted
$temp_file = "WHERE TO PUT TEMP FILES";
$file_dirs_arr = array();
$file_names_arr = array();

$columns = "`name`,`code`,`country`,`min_time`,`interval_time`,`seconds`,`intra_rate`,`inter_rate`,`indeterminate_rate`";
$Tot = microtime(true);

/*************************** START OF EXECUTION ***************************/


combineVendors($conn, $masterTable, $columns, $vendorArr, $numtables); //also processes blacklist if there is one
createInternalTable($conn, $masterTable, $internal, $numVendors);
$cols = createCalcTable($conn, $internal, $calc_table, $numCols);
if($dropDelta == -1 ) {
    proccessVendorsNoDelta($conn, $internal, $calc_table, $temp_file, $numCols, $cols);
} else {
    proccessVendors($conn, $internal, $calc_table, $temp_file, $dropDelta, $numCols, $cols);
}
createCostTable($conn, $blend_arr, $numCols, $calc_table, $cost_table, $internal);
createFinalTable($conn, $cost_table, $calc_table, $final_table, $internal, $RSID, $e_date);
writeOutCsv($conn, $final_table, $base . "_f.csv");
array_push($file_dirs_arr, $base . "_f.csv");
array_push($file_names_arr, $RSID . ".csv");
if(isset($_POST['internalSheet'])) {
    writeOutinternal($conn, $calc_table, $cost_table, $final_table, $cols, $base . "_i.csv"); //internal is actually a modified calc table
    array_push($file_dirs_arr, $base . "_i.csv");
    array_push($file_names_arr, $RSID . "_internal.csv");
}
for($i = 0; $i < $numcustomers; $i++) {
	dropTables($conn, "$calc_table, $cost_table, $final_table");
    $cols = createCalcTable($conn, $internal, $calc_table, $numCols);
    if($dropDelta == -1 ) {
        proccessVendorsNoDelta($conn, $internal, $calc_table, $temp_file . "_$i", $numCols, $cols, $customerArr[$i]);
    } else {
        proccessVendors($conn, $internal, $calc_table, $temp_file . "_$i", $dropDelta, $numCols, $cols, $customerArr[$i]);
    }
    createCostTable($conn, $blend_arr, $numCols, $calc_table, $cost_table, $internal);
    createFinalTable($conn, $cost_table, $calc_table, $final_table, $internal, $RSID, $e_date);
    writeOutCsv($conn, $final_table, $base . "_" . $customerArr[$i] . ".csv");
    array_push($file_dirs_arr, $base . "_$customerArr[$i].csv");
    array_push($file_names_arr, $RSID . "_$customerArr[$i].csv");
}
dropTables($conn, "$masterTable, $internal, $calc_table, $final_table, $cost_table");
$conn = null;
echo zipFolder($base, $session_name, $file_dirs_arr, $file_names_arr) . ',';
echo 'TOTAL:' . (microtime(true) - $Tot) . "\n";
